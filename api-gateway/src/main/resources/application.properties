# Application Configuration
spring.application.name=api-gateway
server.port=8080
spring.main.web-application-type=reactive
# Added: Explicitly disable service discovery to align with no Eureka usage
spring.cloud.discovery.enabled=false

# Gateway Routes
# Original: spring.cloud.gateway.routes[0].id=employee-service
# Original: spring.cloud.gateway.routes[0].uri=http://localhost:8081
# Original: spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/employees/**
# Original: spring.cloud.gateway.routes[0].filters[0]=RewritePath=/api/v1/employees/(?<segment>.*),/api/v1/employees/$\{segment}
# Original: spring.cloud.gateway.routes[0].filters[1]=AddRequestHeader=Authorization, Bearer {token}
# Original: spring.cloud.gateway.routes[0].filters[2]=LogRequest
# Reason: Removed AddRequestHeader filter because it adds an invalid Bearer {token} header, causing 401 error for /testConnection (public endpoint).
spring.cloud.gateway.routes[0].id=employee-service
spring.cloud.gateway.routes[0].uri=http://localhost:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/employees/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/api/v1/employees/(?<segment>.*),/api/v1/employees/$\{segment}
spring.cloud.gateway.routes[0].filters[1]=LogRequest

# Authentication Service Route
# Original: spring.cloud.gateway.server.webflux.routes[1].id=auth-service
# Original: spring.cloud.gateway.server.webflux.routes[1].uri=lb://auth-service
# Original: spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/login
# Original: spring.cloud.gateway.server.webflux.routes[1].filters[0]=StripPrefix=1
# Reason: Removed because /api/v1/employees/authenticate is handled by employee-service on localhost:8081, and lb://auth-service requires service discovery, which is not used.
#spring.cloud.gateway.server.webflux.routes[1].id=auth-service
#spring.cloud.gateway.server.webflux.routes[1].uri=lb://auth-service
#spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/login
#spring.cloud.gateway.server.webflux.routes[1].filters[0]=StripPrefix=1

# Swagger Route
# Original: spring.cloud.gateway.server.webflux.routes[2].id=swagger
# Original: spring.cloud.gateway.server.webflux.routes[2].uri=lb://employee-service
# Original: spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/swagger-ui/,/v3/api-docs/
# Original: spring.cloud.gateway.server.webflux.routes[2].filters[0]=StripPrefix=1
# Reason: Changed uri to http://localhost:8081 to route Swagger endpoints to Employee Application without service discovery.
spring.cloud.gateway.server.webflux.routes[2].id=swagger
spring.cloud.gateway.server.webflux.routes[2].uri=http://localhost:8081
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/swagger-ui/,/v3/api-docs/
spring.cloud.gateway.server.webflux.routes[2].filters[0]=StripPrefix=1

# Default Filter
spring.cloud.gateway.server.webflux.default-filters[0]=PreserveHostHeader

# Actuator Configuration
management.endpoints.web.exposure.include=health,metrics,info,gateway
management.endpoint.health.show-details=always
management.info.env.enabled=true
management.endpoint.gateway.enabled=true
info.app.name=API Gateway
info.app.description=API Gateway
info.app.version=1.0.0

# JWT Configuration
jwt.secret=your-very-secure-secret-key-minimum-32-characters-long
jwt.expiration=36000000
jwt.refresh.expiration=604800000

# Logging Configuration
logging.level.com.java.employee=DEBUG
logging.level.org.springframework.security=TRACE
logging.level.org.springframework=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
logging.file.name=../api-gateway/logs/api-gateway.log
logging.level.com.example.gateway=DEBUG
logging.level.org.springframework.cloud.gateway=DEBUG
# Added: Enhanced logging for debugging request routing
logging.level.org.springframework.boot=DEBUG

# CORS Configuration for React
spring.cloud.gateway.globalcors.cors-configurations.[/].allowed-origins=http://localhost:3000
spring.cloud.gateway.globalcors.cors-configurations.[/].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/].allow-credentials=true